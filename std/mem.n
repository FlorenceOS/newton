fn swap_no_check_equal(comptime T: type, a: *T, b: *T) inline void {
    const tmp1 = a.*;
    const tmp2 = b.*;
    b.* = tmp1;
    a.* = tmp2;
}

fn swap(comptime T: type, a: *T, b: *T) inline void {
    if(a == b) {
        return;
    }
    swap_no_check_equal(T, a, b);
}

fn reverse_range(comptime T: type, beg: *T, end: *T) void {
    loop {
        if(beg >= end) {
            return;
        }
        swap_no_check_equal(T, beg, end);
        beg += 1;
        end -= 1;
    }
}

fn reverse(comptime T: type, ptr: *T, len: u64) inline void {
    reverse_range(T, ptr, ptr + len - 1);
}

fn copy(dest: *u8, src: *const u8, len: u64) void {
    var offset: u64 = 0;
    loop {
        if(offset == len) {
            return;
        }
        dest[offset] = src[offset];
        offset += 1;
    }
}

fn output(comptime T: type, ptr: *const T, comptime len: u64) inline |out_buf| [len]T {
    copy(@int_to_ptr(*u8, @ptr_to_int(out_buf)), @int_to_ptr(*const u8, @ptr_to_int(ptr)), len * @size_of(T));
}

fn output_value(comptime T: type, ptr: *const T) inline |out_buf| T {
    copy(@int_to_ptr(*u8, @ptr_to_int(out_buf)), @int_to_ptr(*const u8, @ptr_to_int(ptr)), @size_of(T));
}

fn equals(comptime T: type, lhs: *const T, rhs: *const T, len: u64) bool {
    var i: u64 = 0;
    loop {
        if(i == len) {
            return true;
        }
        if(lhs[i] != rhs[i]) {
            return false;
        }
        i += 1;
    }
}
